<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo (v2)</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
    var request_user = request.pathParams.user_name;
    var request_niquery = request.queryParams.ni_query;

    // Query the sys_user table to get the user record for the user passed in
    // the user_id path parameter.  
    var requestUserR = new GlideRecord('sys_user');
    requestUserR.get('user_name', request_user);

    if (!requestUserR.user_name) {
        var apiError = new sn_ws_err.ServiceError();
        apiError.setStatus(542);
        apiError.setMessage("User not found");
        apiError.setDetail("No user record found for the user_name passed into the ni_info web service resource using the user_name path parameter.");
        response.setError(apiError);
        return;
    }

    // Get the count of active NeedIt table records where the user from the
    // user_name path parameter is the Requested for.  The encoded query is from the
    // Query Parameter Associations.  Group by category.
    var userNiCount = new GlideAggregate('x_58872_needit_needit');
    userNiCount.addAggregate('COUNT');
    userNiCount.addQuery('u_requested_for', requestUserR.sys_id);
    userNiCount.addEncodedQuery(request_niquery);
    userNiCount.groupBy('u_request_type');
    userNiCount.query();

    var needitRecs = 0;
    var niUserRecs = [];
    var needitRecsCount = 0;

    while (userNiCount.next()) {
        needitRecs = userNiCount.getAggregate('COUNT');
        var reqType = userNiCount.u_request_type.getDisplayValue();
        niUserRecs.push({
            "requestType": reqType,
            "count": needitRecs
        });
        needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
    }

    //Create a body object.  Add property value pairs to the body.
    var body = {};
    body.apiversion = 'v2';
    body.totalUserNIRecs = needitRecsCount;
    body.catCounts = niUserRecs;
    body.user = {
        "User name": requestUserR.user_name,
        "User ID": requestUserR.sys_id
    };

    // Send the response object, which is returned to the requestor, to the body object.
    response.setBody(body);

    //response.setStatus('202');
    // var error= new sn_ws_err.ServiceError();
    // error.setStatus('590');
    // error.setMessage('Test self definited error');
    // error.setDetail('--This not a real error. but a admin invokded to test servicenow error -');

    // response.setError(error);




})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>true</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-21 06:29:37</sys_created_on>
        <sys_id>c57266b4c306121064fb961d050131e2</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>ni_getinfo (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_c57266b4c306121064fb961d050131e2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-21 06:33:14</sys_updated_on>
        <web_service_definition display_value="NeedIt API">f42fe5f4c302121064fb961d05013109</web_service_definition>
        <web_service_version display_value="v2">497266b4c306121064fb961d050131df</web_service_version>
    </sys_ws_operation>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>c57266b4c306121064fb961d050131e2</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-21 06:30:16</sys_created_on>
        <sys_id>ee92aaf4c306121064fb961d050131b2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-21 06:30:16</sys_updated_on>
        <table>sys_ws_operation</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
